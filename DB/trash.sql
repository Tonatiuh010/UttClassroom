
/*#################### GET DIAGNOSTICS #######################*/
DROP FUNCTION IF EXISTS GET_DIAGNOSTICS;
DELIMITER //
CREATE FUNCTION GET_DIAGNOSTICS() 
RETURNS VARCHAR(500)
DETERMINISTIC
BEGIN 
	DECLARE ERR_MSG VARCHAR(500) DEFAULT 'OK';
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET ERR_MSG = 'UNKNOWN ERROR';
    GET DIAGNOSTICS CONDITION 1 @errno = MYSQL_ERRNO, @errmsg = MESSAGE_TEXT;
		SET ERR_MSG = CONCAT( '(', @errno ,'): ', @errmsg);
    RETURN ERR_MSG;    
END //
DELIMITER ;

DROP PROCEDURE IF EXISTS TEST_F;
DELIMITER //
CREATE PROCEDURE TEST_F (
	OUT OUT_RESULT VARCHAR(500)
) BEGIN
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION BEGIN 
		SET OUT_RESULT = CONCAT('LOOK A THIS DUMMY ERROR - ', GET_DIAGNOSTICS() );
    END;
    SET OUT_RESULT = 'OK';

	SELECT * FROM ABC;
END //
DELIMITER ;

CALL TEST_F(@msg);
select @msg;

## QUERIES
WITH STU_C AS (
	SELECT 
		S.STUDENT_ID, S.STUDENT_CODE, S.NAME,
        S.LAST_NAME, S.IMAGE, S.BIRTH,
        S.BIRTH_LOCATION, ## LOCATION_ID 
        S.GENRE_ID, ## ASSET_ID
        S.MARITAL_ID, ## ASSET_ID
        S.CONTACT_ID, ## CONTACT_ID
        S.ADDRESS_ID, ## ADDRESS_ID
        S.SCHOLARLY_ID, SC.SCHOOL_NAME,
        SC.SCH_TYPE_ID, ## ASSET_ID
        SC.ADDRESS_ID SCA_ID, ## ADDRESS_ID
        S.LABOR_ID, LS.DEPARTMENT, LS.BUSINESS, LS.JOB,
        LS.ADDRESS_ID LSA_ID, ## ADDRESS_ID
        LS.CONTACT_ID LSC_ID, ## CONTACT_ID
        LS.IS_STUDY
	FROM 
		STUDENT S RIGHT JOIN  SCHOLARLY SC ON SC.SCHOLARLY_ID = S.SCHOLARLY_ID
                  RIGHT JOIN  LABOR_STUDENT LS ON LS.LABOR_ID = S.LABOR_ID
), CON_C AS (
	SELECT DISTINCT
		C.CONTACT_ID, 
        C.EMAIL1, 
        C.EMAIL2, 
        C.PHONE1, 
        C.PHONE2, 
        C.DESCRIPTION 
	FROM 
		CONTACT C, STU_C 
	WHERE 
		C.CONTACT_ID IN (STU_C.CONTACT_ID, STU_C.LSC_ID)
), ADD_C AS (
	SELECT DISTINCT
		A.ADDRESS_ID, A.STREET, A.NUMBER,
		A.NEIGHBORHOOD, A.LOCATION_ID
	FROM 
		ADDRESS A JOIN STU_C ON A.ADDRESS_ID IN (STU_C.SCA_ID, STU_C.LSA_ID)			
), LOC_C AS (
	SELECT DISTINCT
		L.LOCATION_ID, L.COUNTRY_ID, 
        L.CITY_ID, L.CITY
	FROM 
		LOCATION L, ADD_C, STU_C
	WHERE 
		L.LOCATION_ID IN ( ADD_C.LOCATION_ID, STU_C.BIRTH_LOCATION)
), ASSET_C AS ( 
	SELECT DISTINCT
		A.ASSET_ID, A.ASSET_CODE, 
        A.NAME, A.ATTR1, A.ATTR2, A.ATTR3
    FROM 
		ASSET A, STU_C, LOC_C
	WHERE 
		ASSET_ID IN ( STU_C.GENRE_ID, STU_C.MARITAL_ID, 
					  STU_C.SCH_TYPE_ID, LOC_C.COUNTRY_ID, 
                      LOC_C.CITY_ID ) 
) 	
SELECT 
		S.*, 
        /* STUDENT ADDRESS */
        STA.STREET STUDENT_STREET, STA.NUMBER STUDENT_NUMBER, 
        STA.NEIGHBORHOOD STUDENT_NEIGHBORHOOD, STA.LOCATION_ID STA_LOCATION,
        /* SCHOOL ADDRESS */        
        SCA.STREET SCHOOL_STREET, SCA.NUMBER SCHOOL_NUMBER, 
        SCA.NEIGHBORHOOD SCHOOL_NEIGHBORHOOD, SCA.LOCATION_ID SCA_LOCATION,
        
        MARITAL_AS.ASSET_CODE MARITAL_CODE, 
        MARITAL_AS.NAME MARITAL,
        GENRE_AS.ASSET_CODE GENRE_CODE,
        GENRE_AS.NAME GENRE,
        SCHOOL_AS.ASSET_CODE SCHOOL_TYPE_CODE,
        SCHOOL_AS.NAME SCHOOL_TYPE
	FROM 
		STU_C S RIGHT JOIN ADD_C STA ON STA.ADDRESS_ID = S.ADDRESS_ID -- STUDENT ADDRESS
				RIGHT JOIN ADD_C SCA ON SCA.ADDRESS_ID = S.SCA_ID -- STUDENT SCHOOL ADDRESS
                RIGHT JOIN ADD_C LSA ON LSA.ADDRESS_ID = S.LSA_ID -- LABOR STUDENT ADDRESS
                RIGHT JOIN LOC_C STL ON STL.LOCATION_ID = STA.LOCATION_ID -- STUDENT LOCATION ADDRESS
                RIGHT JOIN LOC_C SCL ON SCL.LOCATION_ID = SCA.LOCATION_ID -- STUDENT SCHOOL ADDRESS LOCATION
                RIGHT JOIN LOC_C LSL ON LSL.LOCATION_ID = LSA.LOCATION_ID -- LABOR STUDENT LOCATION
				RIGHT JOIN LOC_C BL ON BL.LOCATION_ID = S.BIRTH_LOCATION -- STUDENT BIRTH LOCATION
                RIGHT JOIN CON_C SC ON SC.CONTACT_ID = S.CONTACT_ID -- STUDENT CONTACT
                RIGHT JOIN CON_C LC ON LC.CONTACT_ID = S.LSC_ID -- LABOR CONTACT
                RIGHT JOIN ASSET_C MARITAL_AS ON MARITAL_AS.ASSET_ID = S.MARITAL_ID
                RIGHT JOIN ASSET_C GENRE_AS ON GENRE_AS.ASSET_ID = S.GENRE_ID
                RIGHT JOIN ASSET_C SCHOOL_AS ON SCHOOL_AS.ASSET_ID = S.SCH_TYPE_ID
                
                RIGHT JOIN ASSET_C STL_ACO ON STL_ACO.ASSET_ID = STL.COUNTRY_ID -- STUDENT LOCATION COUNTRY
                RIGHT JOIN ASSET_C STL_ACI ON STL_ACI.ASSET_ID = STL.CITY_ID -- STUDENT LOCATION CITY
                
                RIGHT JOIN ASSET_C SCL_ACO ON SCL_ACO.ASSET_ID = SCL.COUNTRY_ID -- SCHOOL LOCATION COUNTRY
                RIGHT JOIN ASSET_C SCL_ACI ON SCL_ACI.ASSET_ID = SCL.CITY_ID -- SCHOOL LOCATION CITY
                
                RIGHT JOIN ASSET_C LSL_ACO ON LSL_ACO.ASSET_ID = LSL.COUNTRY_ID -- LABOR LOCATION COUNTRY
                RIGHT JOIN ASSET_C LSL_ACI ON STL_ACI.ASSET_ID = LSL.CITY_ID -- LABOR LOCATION CITY
                
                RIGHT JOIN ASSET_C BL_ACO ON BL_ACO.ASSET_ID = BL.COUNTRY_ID -- BIRTH LOCATION COUNTRY
                RIGHT JOIN ASSET_C BL_ACI ON BL_ACI.ASSET_ID = BL.CITY_ID -- BIRTH LOCATION CITY
                
-- 		   CON_C, 
--         LOC_C, 
--         ADD_C, 
--         ASSET_C
;

/*
	The main idea about this Query is to determine
    the basic information about Student
*/
SELECT 
	S.NAME, 
    S.LAST_NAME,
    S.IMAGE,
    S.BIRTH,
    S.BIRTH_LOCATION,
    SA.ADDRESS_ID,
    SA.STREET,
    SA.NUMBER,
    SA.NEIGHBORHOOD,
    SA.LOCATION_ID ADDRESS_LOCATION,
    BIRTH_L.COUNTRY_ID,
    BIRTH_L.CITY_ID,
    BIRTH_L.CITY,
    GENRE.ASSET_CODE GENRE_CODE, 
    GENRE.NAME GENRE, 
    MARITAL.ASSET_CODE MARITAL_CODE,
    MARITAL.NAME MARITAL,
    S.LABOR_ID,
    LS.DEPARTMENT,
    LS.BUSINESS,
    LS.ADDRESS_ID LABOR_ADDRESS,
    LS.CONTACT_ID LABOR_CONTACT,
    LS.IS_STUDY
FROM 
	STUDENT S JOIN  ASSET GENRE ON GENRE.ASSET_ID = S.GENRE_ID
			  JOIN  ASSET MARITAL ON MARITAL.ASSET_ID = S.MARITAL_ID
              LEFT JOIN LABOR_STUDENT LS ON LS.LABOR_ID = S.LABOR_ID
              LEFT JOIN ADDRESS SA ON SA.ADDRESS_ID = S.ADDRESS_ID
              LEFT JOIN LOCATION BIRTH_L ON BIRTH_L.LOCATION_ID = S.BIRTH_LOCATION;
              
              
DESCRIBE STUDENT;


SELECT 
	A.ADDRESS_ID,
    A.STREET,
    A.NUMBER,
    A.NEIGHBORHOOD,
    L.LOCATION_ID,
    AS_COUNTRY.ASSET_ID COUNTRY_ID,
    AS_COUNTRY.ASSET_CODE COUNTRY_CODE,
    AS_COUNTRY.NAME COUNTRY,
    AS_CITY.ASSET_ID CITY_ID,
    AS_CITY.ASSET_CODE CITY_CODE,
    AS_CITY.NAME CITY
FROM 
	ADDRESS A, 
    LOCATION L, 
    ASSET AS_COUNTRY, 
    ASSET AS_CITY
WHERE 
	A.LOCATION_ID = L.LOCATION_ID
AND AS_COUNTRY.ASSET_ID = L.COUNTRY_ID
AND AS_CITY.ASSET_ID = L.CITY_ID
-- AND A.ADDRESS_ID = IFNULL(NULL, A.ADDRESS_ID)
;

SELECT 
	A.ASSET_ID,
    A.ASSET_CODE,
    A.NAME,
    A.ATTR1,
    A.ATTR2,
    A.ATTR3,
    A.DESCRIPTION
FROM 
	ASSET A 
WHERE  		
	A.ATTR1 = IFNULL('MUNIC', A.ATTR1)    
	AND CASE WHEN 1 = 1 THEN FALSE ELSE A.ATTR2 = IN_ATTR2 END 
	AND CASE WHEN 1 = 1 THEN FALSE ELSE A.ATTR3 = IN_ATTR3 END 
;

SELECT 
	CF.CON_FAMILY_ID, 
    CF.NAME,
    CF.KINSHIP,
    CF.WORK,
    CF.IS_EMERGENCY,
    CF.STUDENT_ID,
    CF.CONTACT_ID,    
    C.EMAIL1,
    C.EMAIL2,
    C.PHONE1,
    C.PHONE2
FROM
	CONTACT_FAMILY CF,
    CONTACT C
WHERE
	CF.STUDENT_ID = IFNULL(NULL, CF.STUDENT_ID)    
AND CF.CON_FAMILY_ID = IFNULL(NULL, CF.CON_FAMILY_ID)
AND C.CONTACT_ID = CF.CONTACT_ID;


SELECT 
	GC.GROUP_ID,
    GC.GROUP_CODE, 
    GC.GROUP_KEY,
    GC.QUARTER,
    GC.MAJOR_ID,
    MAJOR.MAJOR_CODE MAJOR_CODE,
    MAJOR.NAME MAJOR,
    LEVEL_SCH.ASSET_ID LEVEL_ID,
    LEVEL_SCH.ASSET_CODE LEVEL_CODE,
    LEVEL_SCH.NAME LEVEL,
    GC.FIELD_ID,
    FIELD.ASSET_CODE FIELD_CODE,
    FIELD.NAME FIELD,
    GC.PERIOD_ID,
    PERIOD.ASSET_CODE PERIOD_CODE,
    PERIOD.NAME PERIOD,
    GC.DESCRIPTION
FROM 
	GROUP_CLASS GC JOIN MAJOR MAJOR ON MAJOR.MAJOR_ID = GC.MAJOR_ID
				   JOIN ASSET FIELD ON FIELD.ASSET_ID = GC.FIELD_ID
                   JOIN ASSET PERIOD ON PERIOD.ASSET_ID = GC.PERIOD_ID
                   JOIN ASSET LEVEL_SCH ON LEVEL_SCH.ASSET_ID = MAJOR.LEVEL_ID
WHERE 
	GC.GROUP_ID = IFNULL(NULL, GROUP_ID);
    
    
SELECT 
	GS.GROUP_ID, GC.GROUP_CODE,
    GC.GROUP_KEY, GC.QUARTER,
    GC.DESCRIPTION, GS.IS_CURSED, 
    GS.STUDENT_ID, S.STUDENT_CODE, 
    S.NAME STUDENT_NAME, S.LAST_NAME STUDENT_LAST_NAME, S.BIRTH STUDENT_BIRTH
FROM 
	GROUP_STUDENT GS JOIN STUDENT S ON GS.STUDENT_ID = S.STUDENT_ID
					 JOIN GROUP_CLASS GC ON GC.GROUP_ID = GS.GROUP_ID
WHERE 
	GS.GROUP_ID = IFNULL(NULL, GS.GROUP_ID)
AND GS.STUDENT_ID = IFNULL(NULL, GS.STUDENT_ID);